package com.codingdojo.relationships.controllers;

import java.util.ArrayList;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;

import com.codingdojo.relationships.models.License;
import com.codingdojo.relationships.models.Person;
import com.codingdojo.relationships.services.LicenseService;
import com.codingdojo.relationships.services.PersonService;

@Controller
public class LicenseController {
	
	@Autowired
	LicenseService licenseService;
	
	@Autowired
	PersonService personService;
	
	@GetMapping("/licenses/new")
	public String index(@ModelAttribute("license") License license, Model model) {
		ArrayList<Person> unlicensedPersons = personService.findPersonsWithoutLicense();
		model.addAttribute("unlicensedPersons", unlicensedPersons);
		String newLicenseNumber;
		try {
			newLicenseNumber = String.format("%08d", licenseService.findLastLicense().getId() + 1);
		} catch (NullPointerException e){
			newLicenseNumber = String.format("%08d", 1);
			System.out.println(e);
		}
			model.addAttribute("newLicenseNumber", newLicenseNumber);
		return "newLicense.jsp";
	}
	@PostMapping("/licenses/create")
	public String licenses(@Valid @ModelAttribute("license") License license, BindingResult result, Model model) {
		if(result.hasErrors()) {
			ArrayList<Person> unlicensedPersons = personService.findPersonsWithoutLicense();
			model.addAttribute("unlicensedPersons", unlicensedPersons);
			String newLicenseNumber;
			try {
				newLicenseNumber = String.format("%08d", licenseService.findLastLicense().getId() + 1);
			} catch (NullPointerException e){
				newLicenseNumber = String.format("%08d", 1);
			}
				model.addAttribute("newLicenseNumber", newLicenseNumber);
			return "newLicense.jsp"; 
		} else {
		    licenseService.createLicense(license);
			Long personId = license.getPerson().getId();
			return String.format("redirect:/persons/%d", personId);
		}
	}
}
